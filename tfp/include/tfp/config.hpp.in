/* --------------------------------------------------------------
 * Configures prerequisits for this library
 * --------------------------------------------------------------*/

#ifndef TFP_CONFIG_HPP
#   define TFP_CONFIG_HPP

#   include <Eigen/Dense>
#   include <complex>

namespace tfp {
   typedef ${TFP_REAL} Real;
   typedef std::complex<Real> Complex;
   typedef Eigen::Array<Real, Eigen::Dynamic, 1> RealArray;
   typedef Eigen::Array<Complex, Eigen::Dynamic, 1> ComplexArray;
   typedef Eigen::Matrix<Real, Eigen::Dynamic, 1> RealVector;
   typedef Eigen::Matrix<Complex, Eigen::Dynamic, 1> ComplexVector;
   typedef Eigen::Matrix<Real, Eigen::Dynamic, Eigen::Dynamic> RealMatrix;
}

#cmakedefine TFP_TESTS
#   define TFP_${TFP_LIB_TYPE}

#   define TFP_HAVE_SINH ${TFP_HAVE_SINH}
#   define TFP_HAVE_COSH ${TFP_HAVE_COSH}
#   define TFP_HAVE_TANH ${TFP_HAVE_TANH}
#   define TFP_HAVE_ASINH ${TFP_HAVE_ASINH}
#   define TFP_HAVE_ACOSH ${TFP_HAVE_ACOSH}
#   define TFP_HAVE_ATANH ${TFP_HAVE_ATANH}

#   define SINH ${TFP_SINH_SYMBOL}
#   define COSH ${TFP_COSH_SYMBOL}
#   define TANH ${TFP_TANH_SYMBOL}
#   define ASINH ${TFP_ASINH_SYMBOL}
#   define ACOSH ${TFP_ACOSH_SYMBOL}
#   define ATANH ${TFP_ATANH_SYMBOL}

#   if defined(TFP_SHARED)
#       if defined(TFP_BUILDING)
#           define TFP_PUBLIC_API ${TFP_API_EXPORT}
#       else
#           define TFP_PUBLIC_API ${TFP_API_IMPORT}
#       endif
#       define TFP_PRIVATE_API ${TFP_API_LOCAL}
#   else
#       define TFP_PUBLIC_API
#       define TFP_PRIVATE_API
#   endif

#endif /* TFP_CONFIG_HPP */
